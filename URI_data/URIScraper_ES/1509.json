{"output":"For each test case print U lines. The i-th line in the output should contain thenumber of ways of obtaining the i-th word the friends wrote down by concatenating words from the listof words they know. Because this number can be quite large, print it modulo 109 + 7.","input":"The input contains many test cases and ends with EOF. Each test case starts with a line containing a positive integer D (at most 105), the number of words the friends know. The next D lines contain those words. Each of these lines contains a single distinct word. After that, there's a line with a positive integer U (at most 1000), which is thenumber of words the friends wrote down. Then, U lines follow, each containing one such word.\n\n Every word in the input file consists of at most 100 English lowercase letters.","level":10,"name":"Counting Ambiguities","has_images":false,"description":"While coming to this training camp by bus, one attentious contestant noted a sign that had an advertisement with a website URL that read www.programs.healthyfood.ma(he suspects that the .ma stands for \"Mars\", but that seems unlikely). Because he was discussing the new features of C++11 with a friend in that moment, he thought the \"programs\" in the URL was related to the result of computer programming. However, it turns out the URL was unfortunate:it was actually the concatenation of two words: the adjective \"pro\", which means \"in favor of\",and the noun \"grams\", which is the plural of a kind of legume used as food. That explains thefact that the URL lead the contestant and his friend to a Web page contanining pictures of healthywomen instead of tutorials about variadic templates!\n\n After laughing at what happened, the two friends are now curious about those ambiguities in URLs.They started looking at every sign on the road and writing down the URLs they contain. But, as amatter of fact, they had too many URLs to verify - considerably more than what a computer programmeraccepts doing by hand. Because of that, they want to write a program that, given the list of wordsthey know, counts in how many ways a certain word can be obtained by concatenating one or more wordsfrom the list.\n\n Both of them are very skilled programmers and have already designed the perfect algorithm for this problem.The main problem is that their laptops ran out of battery, and they're not willing to program usingtheir smartphones (there's no Internet access on the roads to access a computer with a compiler remotely). Because you're sitting nearby and your laptop still has battery power for more than 10 minutes (enough, isn't it?) of programming, they asked you to write the program for them. Of course, they didn't tell you the algorithm because they count on your problem-solving skills. Can you write such program for them?\n\n Note that one word can be used several times in the concatenation process. For example, if the friends know the words\"a\" and \"aa\", they can form the word \"aaa\" in the following 3 ways (here, + means concatenation):\n\n\n\t\"a\" + \"a\" + \"a\"\n\t\"a\" + \"aa\"\n\t\"aa\" + \"a\"\n\n\n Thus, the answer for this case would be 3.\n\n On the other hand, there would be 2 ways of forming the word \"aa\":\n\n\n\t\"a\" + \"a\"\n\t\"aa\"\n\n\n Note that a word can be formed by simply using it, if it is known by the friends.","id":"1509","category":"Paradigmas","statistics":{"level":"10 / 10","submissions":270,"solved":54,"ratio":"20.00%"}}