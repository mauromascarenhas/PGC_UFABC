{"output":"Imprima una línea con el mensaje S con el bit extra B.","input":"Cada caso de prueba consiste de una línea conteniendo el mensaje S, el cual tiene al menos 1 y como máximo 100 bits.","level":1,"name":"Paridad","has_images":false,"description":"La popularidad de las redes WiFi incrementó la tasa de pérdida de datos que se están transfiriendo, debido a que varios factores de entorno pueden fácilmente \n\t\t\t\t\tcomprometer los datos durante el tráfico. El objetivo principal de URI, Unidad de Recuperación de Información, es identificar y corregir errores en los mensajes \n\t\t\t\t\tque se están enviando a través de redes WiFi.\n\t\t\t\t\t\n\t\t\t\t\t La técnica usada por URI para identificar errores es el test de paridad, el cual puede ser descrito como sigue: Sea S un mensaje que va a ser enviado desde un \n\t\t\t\t\tdispositivo a otro. Antes de que S se envíe, se agrega un bit extra B al final de la representación binaria de S. Si S tiene un número par de valores 1, el bit extra \n\t\t\t\t\tB tendrá valor 0. De otra forma, si S tiene un número impar de bits con valor 1, B tendrá valor 1. De esta forma, luego de insertar el bit B, el mensaje S siempre \n\t\t\t\t\ttendrá un número par de valores 1.\n\n\t\t\t\t\t Cuando el receptor recibe el mensaje S, él cuenta cuantos bits con valor 1 hay. Si la cantidad es par, significa que el mensaje fué transferido correctamente.\n\t\t\t\t\tDe otra forma, significa que el mensaje tuvo una modificación y no es correcto.\n\n\t\t\t\t\t Tu tarea es escribir un algoritmo que haga la inserción del bit extra B en el mensaje S, asegurando que luego de la inserción el mensaje S tiene un número par de \n\t\t\t\t\tbits de valor 1.","id":"2176","category":"Principiante","statistics":{"level":"1 / 10","submissions":5273,"solved":3382,"ratio":"64.14%"}}