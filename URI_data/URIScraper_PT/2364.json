{"output":"Para cada caso de teste, imprima uma única linha na saída padrão contendo o número de entradas distintas (x1, \u2026, xM) para as quais ambos os programas retornem a mesma resposta módulo 109 + 7.","input":"A entrada é composta por multiplos casos de teste e deve ser lida da entrada padrão. Cada caso de teste começa com uma linha contendo 3 inteiros: M, L0 e L1. O inteiro M (1 ≤ M ≤ 106 ) denota a quantidade de variáveis de entrada. Já L0 corresponde ao número de instruções no primeiro programa (1 ≤ L0 ≤ 1000) e L1 corresponde ao número de instruções no segundo (1 ≤ L1 ≤ 1000).\n\nEm seguida, há L0 linhas contendo o primeiro programa. Instruções de desvio do tipo [Ii D j Ik Il] são denotadas por um identificador Ii (1 ≤ Ii ≤ L0) seguido do caractere \u201cD\u201d e de três inteiros j, Ik, e Il. O inteiro j indica que a variável xj é considerada pelo desvio (1 ≤ j ≤ M). Já os inteiros Ik e Il (1 ≤ Ik, Il ≤ L0) indicam as instruções de destino do desvio caso xj=1 e caso xj = 0, respectivamente. Finalmente, instruções de retorno [Ii R v] são denotadas por um identificador numérico Ii (1 ≤ Ii ≤ L0) seguido do caractere \u201cR\u201d e de um inteiro v ∈{0, 1}.\n\nFinalmente, outras L1 linhas descrevem o segundo programa. Como antes, instruções de desvio do tipo [Ii D j Ik Il] são denotadas por um identificador Ii (1 ≤ Ii ≤ L1) seguido do caractere \u201cD\u201d e de três inteiros j, Ik, e Il. O inteiro j indica que a variável xj é considerada pelo desvio (1 ≤ j ≤ M). Já os inteiros Ik e Il (1 ≤ Ik, Il ≤ L1) indicam as instruções de destino do desvio caso xj=1 e caso xj = 0, respectivamente. Finalmente, instruções de retorno [Ii R v] são denotadas por um identificador numérico Ii (1 ≤ Ii ≤ L1) seguido do caractere \u201cR\u201d e de um inteiro v ∈{0, 1}.\n\nNote que embora os identificadores de instruções são únicos apenas dentro de um único programa.\n\nA entrada termina com uma linha contendo três zeros, que não deve ser processada.","level":3,"name":"Henrique","has_images":false,"description":"Nos primórdios da computação, os professores exigiam que trabalhos práticos de Algoritmos e Estruturas de Dados II (AEDs II) fossem feitos em uma linguagem chamada DCCembly. Infelizmente, apenas um aluno era insano o bastante para fazer trabalhos a partir do zero utilizando essa linguagem. Esse aluno se chamava Henrique. Os demais alunos copiavam trabalhos de semestres anteriores, o que sempre acabava introduzindo pequenos erros.\n\nNesse problema, você deve escrever um programa que ajude a detectar essas cópias. Seu programa deve receber como entrada dois programas válidos escritos em DCCembly e retornar como saída a quantidade de entradas (módulo 109 + 7) para as quais ambos os programas retornem a mesma resposta.\n\n\n\tValores de Retorno: [Ii R v]\n\n\tPara o programa e retorna o valor booleano v ∈{0,1} como saída.\n\t\n\tDesvios condicionais: [Ii D j Ik Il]\n\tLê o valor de entrada xj e desvia a execução para a instrução de rótulo Ik se xj = 1 e Il se xj = 0.\n\n\tDenotaremos por var(Ii) a variável considerada por uma instrução. Assim, se [Ii D j Ik Il] é uma instrução, var(Ii) = j. Para instruções com valores de retorno como [Ii R v], assumiremos que var(Ii) = M + 1.\n\t\n\n\nTodo programa válido em DCCembly deve satisfazer as seguinte propriedades:\n\n\n\tPara toda instrução de rótulo Ii, existe uma entrada X = (x1, \u2026, xM) tal que Ii seja executada quando o programa recebe X.\n\tPara toda instrução de desvio [Ii D j Ik Il], temos var(Ii) < var(Ik) e var(Ii) < var(Il).\n\tUma instrução de desvio só pode ter como destinos instruções que apareceram previamente no código.\n\tA execução se inicia pela última instrução.\n\tOs identificadores de instruções são únicos dentro de um único programa.\n\n\nEscreva um programa que receba dois códigos válidos em DCCembly como entrada e retorne o número de entradas distintas para as quais os dois programas tem como saída o mesmo valor. Como a resposta pode ser muito grande, basta computa-la módulo 109 + 7.","id":"2364","category":"Paradigmas","statistics":{"level":"3 / 10","submissions":7,"solved":2,"ratio":"28.57%"}}