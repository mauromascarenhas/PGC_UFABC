{"output":"Para cada caso teste, imprima uma única linha no seguinte formato.\n\n                    \u201cThe answer is N.\u201d se a expressão é válida, pode ser resolvida e o resultado é N\n                    \n                    \u201cDivision by zero.\u201d se a expressão é válida sintaticamente, mas existe divisão por 0.\n                    \n                    \u201cInvalid expression.\u201d se a expressão não pode ser resolvida em NRJ\n\n                    Todos os resultados, tanto finais quanto intermediários caberão em um inteiro com sinal de 32 bits.","input":"A entrada contém diversos cados testes. Cada caso teste é uma linha com n caracteres (1 ≤ n ≤ 2×106)\n                que pode possivelmente representar uma expressão em NRJ. Essa expressão conterá apenas dígitos de 0 a 9 e os operadores mencionados acima separados por um único espaço.\n\n                 A entrada termina com fim de arquivo.","level":9,"name":"Notação Reversa de João","has_images":false,"description":"O pequeno João está aprendendo como resolver expressões aritmética. Mas as expressão convencionais são muito\n                chatas para ele. Por causa disso, o seu pai está ensinando como resolver expressões escritas em formas diferentes.\n                A primeira forma que ele aprendeu é a Notação Polonesa Reversa, uma forma interessante que não precisa de parentêses\n                . João achou interessante essa notação, mas achou que poderia criar uma ainda mais legal. Por isso ele criou\n                a Notação Reversa de João (NRJ). \n\n                 João chegou a seguinte definição recursiva para NRJ\n\n                \n                    Um único dígito é uma expressão válida e o resultado é o valor deste dígito.\n                    Um operador binário (+, −, * or /), seguido por duas expressões válidas, é uma expressão válida. O resultado\n                    dessa expressão é aplicação do operador com os dois argumentos trocados. Isto é, + a b vale a soma dos dois operandos\n                    - a b, vale b - a, * a b vale o produto dos dois operandos e /a b vale floor(b/a).\n                \n\n                 João agora se diverte escrevendo e resolvendo expressões nesse novo formato. Como ele é uma criança aventureira,\n                ele gosta de expressões grandes. Porém, algumas vezes ele acha algum problema. Parte da expressão que ele escreve não\n                tem solução, porque elas estão mal-formadas ou ocasionam divisão por 0. Mas quando ele resolve novamente, encontra outro valor\n\n                 Agora ele gostaria de ter certeza do resultado. Como você realmente gosta do João, você escreveu um programa\n                para ajudá-lo","id":"1741","category":"Ad-Hoc","statistics":{"level":"9 / 10","submissions":2805,"solved":392,"ratio":"13.98%"}}