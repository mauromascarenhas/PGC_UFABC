{"output":"Para cada par (texto/palavra de busca), deve ser impressa uma linha com a lista das posições da primeira letra onde a palavra está localizada no respectivo texto. Lembre-se que a mesma palavra pode estar repetida no texto. Caso isto ocorra, as posições devem ser impressas uma na frente da outra, separadas por espaços. Caso a palavra não esteja contida no texto, retorne -1 (número um negativo).","input":"A entrada contém, exatamente:\n\n\n\t\n\tNa primeira linha: A quantidade de textos (2 ≤ q ≤ 100.000) a serem lidos, que também será a mesma quantidade de palavras a serem buscadas em cada texto. Em outras palavras, será fornecida uma palavra para cada texto.\n\t\n\t\n\tNas linhas seguintes, para cada entrada, o programa irá receber, consecutivamente:\n\n\t\n\t\t\n\t\tO texto de no mínimo 10 e no máximo 128 caracteres;\n\t\t\n\t\t\n\t\tA palavra a ser buscada. Cada palavra terá no mínimo 2 e no máximo 128 caracteres. Uma palavra nunca será maior que o texto.","level":5,"name":"Eachianos II","has_images":false,"description":"A preocupação dos eachianos continua após descobrirem uma nova bomba e de receberem vários textos do planeta vizinho. Eles ainda desconfiam que existe um padrão no número que representa a posição das palavras presente no texto. Essas posições juntas, segundo eles, representam a senha para desativar a bomba que está prestes a destruir o planeta EACH.\n\nVocê então foi convocado para desenvolver um programa que recebe uma lista de pequenos textos seguidos de palavras (strings de busca) e deve retornar a primeira posição dessas palavras em cada texto.\n\nConstraints:\n\n\n\t\n\tPalavra: pode conter apenas letras minúsculas do alfabeto ('a'-'z').\n\t\n\t\n\tTexto: pode conter apenas letras minúsculas do alfabeto ('a'-'z') separadas por um (e apenas um) espaço em branco. Texto não contém quebra de linha ('\\n') e nem caracteres especiais.\n\t\n\t\n\tO tamanho das palavras nunca será maior que o tamanho do texto.\n\t\n\t\n\tPosição: você deve considerar que a primeira posição do texto deve ser a posição 0 (zero). Assim, em um texto com 50 caracteres, a última posição será a 49.\n\t\n\t\n\tVocê deve procurar apenas as palavras exatas, NÃO VALE SUBPALAVRA. Por exemplo, a palavra AMAR é diferente de PROGRAMAR.","id":"2594","category":"Estruturas e Bibliotecas","statistics":{"level":"5 / 10","submissions":1985,"solved":569,"ratio":"28.66%"}}