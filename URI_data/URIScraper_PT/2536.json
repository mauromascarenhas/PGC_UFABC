{"output":"Para cada caso de teste, imprima uma linha contendo o valor do registrador ao término da execução. Se o programa é executado infinitamente, imprima a frase \u201cexecucao infinita\u201d (sem aspas).","input":"A entrada contém vários casos de teste. A primeira linha de cada caso contém um inteiro N (1 ≤ N ≤ 100), o número de instruções no programa. As próximas N linhas descrevem o programa, uma instrução por linha.\r\n\r\nCada linha inicia com um inteiro indicando o número i da instrução. É garantido que este número é sequencial, isto é, a primeira instrução é a de número 1, a segunda instrução é a de número 2, etc. A linha é seguida pela descrição da instrução, como na tabela acima. Onde for aplicável, 0 ≤ n ≤ 255, 1 ≤ I ≤ N,e I≠i.\r\n\r\nÉ garantido que há uma única instrução halt no programa, e que ela é sempre a instrução de número N, isto é, a última instrução do programa. Também é garantido que n≠0 para toda instrução div.A entrada termina com fim-de-arquivo (EOF).","level":7,"name":"FHBZMIPS","has_images":false,"description":"O FHBZMIPS é um novo processador desenvolvido pela Neboscorp (r). Sua memória interna contém apenas um único registrador r, de 8 bits. Seu conteúdo é sempre interpretado como um inteiro sem sinal, isto é, é possível respresentar inteiros de 0 a 255 em seu registrador.\r\n\r\nO valor inicial do registrador é 0. Além disso, o FHBZMIPS suporta as seguintes operações:\r\n\r\n\r\n\tadd n: Soma n unidades no registrador (r ← r + n)\r\n\tsub n: Decrementa n unidades do registrador (r ← r - n)\r\n\tmul n: Multiplica o valor do registrador por n (r ← r × n)\r\n\tdiv n: O registrador recebe o quociente de sua divisão por n (r ← r ∕ n)\r\n\tand n: Operação E bit-a-bit com n (r ← r AND n)\r\n\tor n: Operação OU bit-a-bit com n (r ← r OR n)\r\n\txor n: Operação OU-exclusivo bit-a-bit com n (r ← r XOR n)\r\n\tgotoif n I: Se o registrador tem valor maior ou igual a n, vá para a instrução de número I (Pular para I se r ≥ n)\r\n\thalt: Termina a execução do programa (Desligar)\r\n\r\n\r\nOcorrências de overflow, que ocorrem quando não é possível representar o resultado de alguma operação no registrador, são tratadas como em outros processadores, onde apenas o resto da divisão do resultado por 256 é mantido. Assim, por exemplo, se o registrador contém 240 e a instrução add 20 é executada, então o registrador passa a conter 4. Se o registrador contém o valor 0 e executa-se sub 2, então passa a conter 254. Se o registrador contém 25 e executa-se mul 25, passa a conter 113.\r\n\r\nMarcelo acabou de escrever um programa em assembly do FHBZMIPS. Sua tarefa é determinar o valor do registrador ao término da execução de seu programa, ou determinar se o programa é executado infinitamente.","id":"2536","category":"Ad-Hoc","statistics":{"level":"7 / 10","submissions":76,"solved":32,"ratio":"42.11%"}}