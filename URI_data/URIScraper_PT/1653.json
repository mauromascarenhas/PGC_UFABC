{"output":"Para cada expressão dada, imprima a expressão com o resultado equivalente quando processada pelo algoritmo com fila ao invés de pilha. Para que a solução seja única, você não deve assumir que os operadores sejam associativos ou comutativos.","input":"A primeira linha da entrada contém um número T (T ≤ 200). Cada uma das T linhas seguintes contêm uma expressão em notação pós-fixa. Operadores aritméticos são representados por letras maiúsculas e números são representados por letras minúsculas. Você pode assumir que o comprimento de cada expressão é menor que 10000 caracteres.","level":3,"name":"Expressões","has_images":false,"description":"Expressões aritméticas geralmente são escritas com os operadores entre os dois operandos (chamada de notação infixa). Por exemplo, (x + y) * (z - w) é uma expressão aritmética em notação infixa. Entretanto, é mais fácil escrever um programa que avalie uma expressão se ela estiver escrita na forma pós-fixa (também conhecida como notação polonesa reversa). Na notação pós-fixa um operador é escrito atrás de seus dois operandos, que podem ser expressões. Por exemplo, x y + z w - * é a expressão dada anteriormente escrita em notação pós-fixa. Note que nesse caso os parênteses não são necessários.\n                    Para avaliar uma expressão escrita na forma pós-fixa pode ser utilizado um algoritmo que usa pilha. Uma pilha é uma estrutura de dados que suporta duas operações:\n                    1. push (empilhar): um número é inserido no topo da pilha\n                    2. pop (desempilhar): o número do topo da pilha é retirado\n                    Uma expressão é avaliada da esquerda para a direita. Se um número for encontrado, ele é empilhado. Se um operador for encontrado, os dois números do topo da pilha são desempilhados, o operador é aplicado sobre eles e o resultado é empilhado de volta na pilha. Mais especificamente, o seguinte pseudocódigo mostra como tratar o caso em que um operador O é encontado:\n                    a := pop();\n                    b := pop();\n                    push(b O a);\n                    O resultado da expressão ficará como o único número na pilha.\n                    Agora imagine que se use uma fila ao invés da pilha. Uma fila também tem operações de push e pop, mas seu significado é diferente:\n                    1. push: um número é inserido no fim da fila\n                    2. pop: o número da frente da fila é retirado\n                    Você consegue reescrever a expressão dada de modo que o resultado do algoritmo usando a fila seja o mesmo que o resultado da expressão original processada pelo algoritmo com pilha?","id":"1653","category":"Grafos","statistics":{"level":"3 / 10","submissions":69,"solved":47,"ratio":"68.12%"}}