{"output":"A saída consiste em uma linha por caso de teste contendo o valor da K-ésima posição da sequência após aplicado M vezes o w-xor sobre ela.","input":"A entrada é composta de vários casos de testes. Cada caso de teste começa com três números inteiros N (2 ≤ N ≤ 103), M (1 ≤ M ≤ 106) e K (1 ≤ K ≤ N) representando a quantidade de elementos da sequência, o número de operações w-xor aplicadas e a posição do valor a ser consultado (observe que a primeira posição é a 1), respectivamente. Na próxima linha haverá N valores inteiros Ai (-109 ≤ Ai ≤ 109). A entrada termina quando N=M=K=0.","level":8,"name":"William Xorando","has_images":false,"description":"William recentemente aprendeu algumas propriedades sobre o operador bit a bit xor(em linguagem c representado pelo operador '^'). Viu que pode fazer muitos algoritmos interessantes com ele: como achar elementos solitários numa sequência, trocar valores sem precisar de variável auxiliar, criptografia e muitos outros. Então começou a experimentar e decidiu até nomear uma operação com seu nome que utilizar xor, o w-xor.\r\n\r\nO w-xor é uma operação feita sobre uma sequência de valores. Exemplo: seja uma sequência S={a1, a2, a3, a4} aplicar o w-xor sobre S uma vez é o equivalente a fazer:\r\n\r\na1= a1^a2^a3^a4\r\n\r\na2= a1^a2^a3^a4\r\n\r\na3= a1^a2^a3^a4\r\n\r\na4= a1^a2^a3^a4\r\n\r\na1= a1^a2^a3^a4\r\n\r\nse S={a1, a2, a3, a4, a5} então aplicar um w-xor sobre S seria:\r\n\r\na1= a1^a2^a3^a4^a5\r\n\r\na2= a1^a2^a3^a4^a5\r\n\r\na3= a1^a2^a3^a4^a5\r\n\r\na4= a1^a2^a3^a4^a5\r\n\r\na5= a1^a2^a3^a4^a5\r\n\r\na1= a1^a2^a3^a4^a5\r\n\r\nDada uma Sequência S e aplicando sobre ela o w-xor M vezes, você saberia dizer qual o valor da K-ésima posição?","id":"2500","category":"Ad-Hoc","statistics":{"level":"8 / 10","submissions":220,"solved":61,"ratio":"27.73%"}}