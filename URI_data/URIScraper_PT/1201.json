{"output":"Cada linha de entrada, com exceção das linhas que contém os comandos \"I\" ou \"R\", deve produzir uma linha de saída. \n\tA saída deve ser de acordo com o exemplo fornecido abaixo. Não deve haver espaço em branco após o último caractere de cada linha, \n\tcaso contrário, sua submissão receberá Presentation Error.","input":"A entrada contém N operações utilizando números inteiros (1-106) sobre uma árvore binária de Busca, que inicialmente se encontra vazia. \n\t\tA primeira linha de entrada contém a inserção de algum elemento. As demais linhas de entrada podem conter quaiquer um dos comandos descritos acima, \n\t\tconforme exemplo abaixo. O final da entrada é determinado pelo final de arquivo (EOF).\n\n\n\n                Saída\n\n                \n                    \n\tCada linha de entrada, com exceção das linhas que contém os comandos \"I\" ou \"R\", deve produzir uma linha de saída. \n\tA saída deve ser de acordo com o exemplo fornecido abaixo. Não deve haver espaço em branco após o último caractere de cada linha, \n\tcaso contrário, sua submissão receberá Presentation Error.\n\n                \n\n                \n\n                \n                    \n                        \n                            Exemplo de Entrada\n                            Exemplo de Saída\n                        \n                    \n                    \n                        \n                            \n                                \n\tI 5\n\tI 2\n\tI 4\n\tI 1\n\tINFIXA\n\tPREFIXA\n\tPOSFIXA\n\tP 3\n\tP 1\n\tINFIXA\n\tR 1\n\tINFIXA\n\t\n                            \n                                \n\t1 2 4 5\n\t5 2 1 4\n\t1 4 2 5\n\t3 nao existe\n\t1 existe\n\t1 2 4 5\n\t2 4 5","level":7,"name":"Operações em ABP II","has_images":false,"description":"Marcela nem terminou de fazer o programa anterior e o professor já lhe pediu um novo programa, com aprimoramentos sobre o programa anterior. \n\tEste novo programa é a implementação de uma Árvore Binária de Pesquisa (ou Busca) mas utilizando números inteiros agora, e que deve aceitar um comando \n\textra (R) com relação ao programa anterior:\n\n\t\n\t\tI n: Insere na árvore binária de pesquisa o elemento n.\n\t\n\t\tINFIXA: lista os elementos já inseridos segundo o percurso infixo\n\t\n\t\tPREFIXA: lista os elementos já inseridos segundo o percurso prefixo\n\t\n\t\tPOSFIXA: lista os elementos já inseridos segundo o percurso posfixo\n\t\n\t\tP n: Pesquisa se o elemento n existe ou não na árvore.\n\t\n\t\tR n: Remove o elemento n da árvore, caso ele exista.\n\n\t A qualquer momento pode-se inserir um elemento, visitar os elementos previamente inseridos na ordem infixa, prefixa ou posfixa, procurar por um elemento na árvore para saber se o elemento existe ou não ou ainda retirar um elemento. \n     Nota: Se um elemento com duas sub-árvores (direita e esquerda) for removido, o antecessor (o elemento maior de sub-árvore esquerda, deve ocupar o seu lugar e ao tentar retirar um elemento que não existe, nenhuma mensagem deve ser apresentada.","id":"1201","category":"Grafos","statistics":{"level":"7 / 10","submissions":4304,"solved":855,"ratio":"19.87%"}}