{"output":"Cada linha de entrada produz 3 linhas de saída. Após construir a árvore binária de busca com os elementos de entrada, \n                    você deverá imprimir a mensagem \"Case n:\", onde n indica o número do caso de teste e\n                    fazer os três percursos da árvore: prefixo, infixo e posfixo, apresentando cada um deles em uma linha com uma mensagem \n                    correspondente conforme o exemplo abaixo, separando cada um dos elementos por um espaço em branco.\n                    Obs: Não deve haver espaço em branco após o último item de cada linha e há uma linha em branco após cada caso de teste, inclusive após o último.","input":"A entrada contém vários casos de teste. A primeira linha da entrada contém um inteiro C (C ≤ 1000), indicando o número de casos de teste \n                    que virão a seguir. Cada caso de teste é composto por 2 linhas. A primeira linha contém um inteiro N (1 ≤ N ≤ 500) que \n                    indica a quantidade de \tnúmeros que deve compor cada árvore e a segunda linha contém N inteiros distintos e não negativos, \n                    separados por um espaço em branco.","level":6,"name":"Árvore Binária de Busca","has_images":true,"description":"Em computação, a árvores binária de busca ou árvore binária de pesquisa é uma estrutura baseada em nós (nodos), onde todos os nós da subárvore esquerda possuem um valor numérico inferior ao nó raiz e todos os nós da subárvore direita possuem um valor superior ao nó raiz (e assim sucessivamente). \n                    O objetivo desta árvore é estruturar os dados de forma flexível, permitindo a busca binária de um elemento qualquer da árvore. \n                \n                \n                    A grande vantagem das árvores de busca binária sobre estruturas de dados convencionais \n                    é que os algoritmos de ordenação (percurso infixo) e pesquisa que as utilizam são muito eficientes.\t \n                    \n                \n                    Para este problema, você receberá vários conjuntos de números e a partir de cada um dos conjuntos, \n                    deverá construir uma árvore binária de busca. Por exemplo, a sequência de valores: 8 3 10 14 6 4 13 7 1 resulta\n                    na seguinte árvore binária de busca:","id":"1195","category":"Grafos","statistics":{"level":"6 / 10","submissions":7932,"solved":2925,"ratio":"36.88%"}}