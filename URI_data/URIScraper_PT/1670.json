{"output":"Para cada caso de teste seu programa deve gerar uma tabela verdade para a proposição denotada. Comece a tabela verdade repetindo a linha de entrada. Avalie a proposição (e as suas subfórmulas) para todas as atribuições para as suas variáveis, e use uma linha para cada atribuição. A linha deve ter o mesmo comprimento que a linha de entrada correspondente e deve conter apenas espaços e os caracteres 0 e 1. Imprima uma linha em branco após cada caso de teste.\n\n                    Deixe os símbolos de proposição (s1, ..., sn) na proposição denotada classificados em ordem alfabética. Então, todas as atribuições de 0 a s1 devem preceder as atribuições de 1 a s1. Dentro de cada um destes blocos de atribuições, todas as atribuições de 0 a s2 devem preceder as atribuições de 1 a s2, e assim por diante.","input":"A entrada contém vários casos de teste, cada um em uma linha separada. Cada caso de teste denota uma proposição e pode conter quantidades arbitrárias de espaços no meio. O arquivo de entrada termina imediatamente após o símbolo de nova linha após o último caso de teste.","level":3,"name":"Lógica Booleana","has_images":false,"description":"Proposições são fórmulas lógicas que consistem em símbolos de proposição e operadores conectivos. Eles são definidos recursivamente pelas seguintes regras:\n\n                    \n                    \tTodos os símbolos de proposição (neste problema, caracteres alfabéticos minúsculos, por exemplo, a e z) são proposições.\n                    \tSe P é uma proposição, (!P) é uma proposição, e P é uma subfórmula direta dela.\n                    \tSe P e Q são proposições, (P&Q), (P|Q), (P-->Q), e (P<->Q) são proposições, e P e Q são subfórmulas diretas delas.\n                    \tNada mais é uma proposição.\n                    \n\n                    As operações !, &, |, -->, e <-> denotam negação, conjunção, disjunção, implicação e equivalência, respectivamente. A proposição P é uma subfórmula de uma proposição R se P=R ou se P é uma subfórmula direta de uma proposição Q e Q é uma subfórmula de R.\n\n                    Seja P uma proposição e atribui-se valores boleanos (isto é, 0 ou 1) a todos os símbolos de proposição que ocorrem em P. Isto induz um valor booleano para todas as subfórmulas de P, de acordo com a semântica padrão dos operadores lógicos:\n\n\n                    \n                    \n                        \n                            Negação  \n                            Conjunção \n                            Disjunção  \n                            Implicação  \n                            Equivalência \n                        \n                    \n\n\n                    \n                    \n                    !0=1\n                    0&0=0\n                    0|0=0\n                    0-->0=1\n                    0<->0=1\n                    \n                    !1=0\n                    0&1=0\n                    0|1=1\n                    0-->1=1\n                    0<->1=0\n                    \n                    \n                    1&0=0\n                    1|0=1\n                    1-->0=0\n                    1<->0=0\n                    \n                    \n                    1&1=1\n                    1|1=1\n                    1-->1=1\n                    1<->1=1\n                    \n                    \n                    \n\n\n                    Dessa forma, o valor de P pode ser calculado. Este valor depende da escolha da atribuição de valores booleanos aos símbolos proposição. Se P contém n símbolos proposição diferentes, existem 2n atribuições diferentes. Para avaliar todas as tarefas possíveis, podemos utilizar tabelas de verdade.\n\n                    Uma tabela verdade contém uma linha por atribuição (ou seja, 2n linhas no total). Cada linha contém os valores de todas as subfórmulas sob a designação escolhida. O valor de uma subfórmula está alinhado com o símbolo da proposição, se a subfórmula é um símbolo proposição, e, de outra forma, com o centro do operador.","id":"1670","category":"Ad-Hoc","statistics":{"level":"3 / 10","submissions":58,"solved":33,"ratio":"56.90%"}}