{"output":"Para cada caso de teste da entrada seu programa deve gerar uma única linha de saída uma palavra hexadecimal de 16 bits. Contendo a informação lida corrigida pela técnica de Hamming e livre dos bits de paridade. Os dígitos hexadecimais em letras minúsculas.","input":"A entrada contém vários casos de teste. Cada caso contém em uma única linha um valor hexadecimal de 21 bits: H, 0 ≤ H ≤ 1fffff. H representa uma palavra de 16 bits codificada com bits de paridade de hamming, que pode possuir no máximo erro de 1 bit. Os dígitos hexadecimais alfabéticos estão grafados em letras minúsculas.","level":10,"name":"Código de Hamming","has_images":true,"description":"O código de Hamming permite detecção e correção de erros de 1 bit na leitura de dados. Vamos considerar palavras de 16 bits. Na tabela abaixo está a palavra 4ac5hex em sua forma binária, cada bit possui sua numeração de posição indicada:\r\n\r\n\r\nNa codificação de Hamming, a numeração das posições dos bits utiliza uma contagem na qual se reserva os valores de posiçã que são potência de 2: 1, 2, 4, ... para inserir bits de paridade. Estes bits serão utilizados como paridade para a codificação de Hamming. No caso acima ficaria:\r\n\r\n\r\nPara calcular a paridade de cada bit de hamming usamos os bits de acordo com sua posição. Por exemplo, o bit da posição 11 irá influenciar os bits de hamming: 8, 2 e 1, pois 11 = 8+2+1. Para o bit de paridade 2, tomamos todos os que influenciam esta paridade. Para uma palavra de 16 bits são: 3 (2+1), 6 (4+2), 7 (4+2+1), 10, 11, 14, 15, 18 e 19. Neste caso, se a soma destes bits for par, a paridade é par e o bit de hamming é 0, caso contrário o bit de hamming é 1. Veja a análise completa:\r\n\r\n\r\nUma vez assim codificada, a palavra resultante de 21 bits pode ser apresentada na forma hexadecimal como: 958a9hex. A vantagem disto é que, se na leitura houver erro de no máximo 1 bit, este erro poderá ser corrigido. Veja por exemplo se ao\r\nler a palavra, tivéssemos lido o valor 978a9hex. Construindo a tabela dos bits teremos:\r\n\r\n\r\n\r\nOlhando para as paridades dos bits de Hamming, vemos que a paridade não bate para os bits 1, 4 e 8, isto representa que houve um erro de leitura no bit (1+4+8) 13 e prontamente corrigimos. A você foi pedido um programa que analize as palavras de 21 bits lidas, codificadas com a paridade de hamming, e imprima as palavras corretas de 16 bits.","id":"2507","category":"Ad-Hoc","statistics":{"level":"10 / 10","submissions":37,"solved":5,"ratio":"13.51%"}}