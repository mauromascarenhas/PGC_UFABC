{"output":"Para cada caso de teste você deverá Imprimir uma linha de saída contendo Noel ou Gnomos, conforme explicação acima. No final, você deve imprimir os valores calculados para as 100 apostas entre os gnomos e Noel. Cada um dos valores é seguido por um espaço em branco, inclusive o último.","input":"A entrada pode conter até 100 casos de teste e termina com EOF. Cada caso de teste é composto por uma linha contendo dois números inteiros separados por um espaço, que representam o número de enfeites contados por Rolien e Noel, respectivamente, para uma das árvores de Noel.","level":4,"name":"Aposta com Noel","has_images":false,"description":"Como é época de Natal, os gnomos Rolien e Naej fizeram uma aposta com o Papai Noel. Rolien e Noel tem 10 segundos para contar a quantidade de enfeites em uma árvore de natal. Após isso, se o máximo divisor comum entre os dois valores contados der um valor maior do que 5, Noel ganha, caso contrario, os gnomos ganham. Bem, o problema é que alguém mexeu no código de Rolien, que antes funcionava perfeitamente e agora dá uns erros estranhos: dependendo do que for mexido, às vezes dá \"Presentation Error\", às vezes dá \"Compilation Error\" e às vezes dá \"Runtime Error\".\n\t\t\t\t\t\n\t\t\t\t\tTendo o código abaixo, acerte estes pequenos erros e submeta a versão correta para o Papai Noel.\n\t\t\t\t\t\n\t\t\t\t\t#include <bits/stdc++.h>\n\nusing namespace std;\n\nint GCDsimp (int num, int den) {\n\tcout << num << den;\n\tif (den > 0)\n\t\treturn GCDsimp (den, num % den);\n\t}\n\treturn num;\n}\n\nint main() {\n\tint num, den, apostas [100], cont=-1;\n\twhile (cin >> num >> den) {\n\t\t apostas[++cont] = GCDsimp (num,den);\n\t\t if  ( apostas[cont] ) > 5)\n\t\t\tcout << \"Noel\" ;\n\t\t else\n\t\t\tcout << \"Gnomos\" << endl;\n\t}\n\tfor (int i=cont; i>0; i++) {\n\t\tcout << apostas[cont] << \" \";\n\t}\n\treturn 0;\n}","id":"2027","category":"Paradigmas","statistics":{"level":"4 / 10","submissions":1202,"solved":519,"ratio":"43.18%"}}