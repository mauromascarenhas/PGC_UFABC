{"output":"Para cada caso de teste o programa deve produzir uma linha com a mensagem:\n\n                No solution\n\n                Se o resultado não puder ser obtido a partir dos números de entrada, ou se um conjunto de linhas com a seqüência de operações leve a partir dos números iniciais para o resultado, levando em consideração os critérios anteriores. Cada operação deve ser expressa da seguinte forma:\n\n                operando_da_esquerda operador operando_da_direita = resultado\n\n                Onde operando_da_esquerda e operando_da_direita representam os números envolvidos na operação, o resultado é o resultado da operação, e o operador é um único caractere que representa a operação que deverá ser feita a partir dos seguintes:\n\n                '+': Adição\n                    'x': multiplicação\n                    '-': Subtração\n                    '/': Divisão\n\n                Para cada caso de teste, a última linha de sua solução deve terminar com um símbolo '<-', indicando que esta é a última operação, que dá o número de destino como resultado. Para todos os casos, deverá haver um espaço vazio (apenas um) entre cada impresso e o seguinte. Não deve haver nenhum caractere (/) negociando espaços em branco no início e no fim de cada linha de saída. Cada linha deve terminar com uma marca de final de linha, e não deve aparecer nenhuma linha em branco na saída.","input":"A entrada é constituída por um conjunto de linhas. Cada linha representa um caso de teste, e lhes serão dados no seguinte formato:\n                \n                T N I1 ... IN\n                \n                T é o número de destino, N é a quantidade de números iniciais e I1 ... IN são os próprios números iniciais. Todos os números são separados por um único espaço em branco. Não haverá caractere (/) levando espaços em branco no início e no fim de qualquer linha de entrada. A linha final com um único zero marca o fim da entrada e não será processada.","level":9,"name":"Números e Operações","has_images":false,"description":"Queremos resolver um problema clássico de obtenção de um determinado número a partir de um conjunto de números iniciais, de acordo com as seguintes regras:\n\n                \n                    Todos os números envolvidos no problema são inteiros positivos, e por isso todo resultado intermediário de qualquer operação também deverá ser inteiro. Assim, as operações que levam a não inteiros ou números não positivos serão estritamente proibidas (não vamos considerar truncamento ou resultados de arredondamento, nem qualquer outra coisa do tipo).\n                    Nós podemos fazer qualquer uma das quatro operações aritméticas elementares: adição, multiplicação, subtração e divisão.\n                    Cada número pode ser utilizada no máximo uma vez: quando utilizamos dois números, os mesmos não podem ser utilizados novamente em operações posteriores (mas o resultado desta operação pode, e as mesmas considerações aplicam-se a este novo número).\n                    Não há nenhuma obrigação de fazer uso de todos os números iniciais.\n                \n\n                Faremos as seguintes premissas sobre os dados de entrada:\n\n                \n                    Para qualquer número de saída T, ele terá sempre que: 0 < T < 2000.\n                    Para qualquer número de entrada I, ele terá sempre que: 0 < I < 200.\n                    Haverá sempre pelo menos dois números iniciais e sete no máximo.\n                    Não vamos considerar os casos de problemas triviais, ou seja, casos em que o número de destino já está contido nos iniciais.\n                \n\n                A fim de tornar a única solução oferecida pelo programa, também deverá fazer as seguintes suposições sobre a solução que iremos considerar como correta: O programa deverá fornecer a solução que satifaz as condições, com um número mínimo de operações. Se houver mais do que uma solução com o número mínimo de operações, vamos decidir qual tomar de acordo com as características da primeira operação na qual eles se diferem. As próximas regras serão aplicadas.\n\n                \n                    Para duas operações iguais, será escolhido aquele cujo operando do lado esquerdo é maior que, ou igual a, o operando do lado direito. Por exemplo, a operação \"10 x 5 = 50\" terá prioridade sobre \"5 x 10 = 50\".\n                    Para as operações que envolvem dois operadores diferentes, será preferido aquele cujo operador tem a prioridade mais alta, definidos como se segue: Adição (mais alto) - Multiplicação - Subtração - Divisão (mais baixo).\n                    Para operações com o mesmo operador, será preferido um que envolve o número cuja posição é mais baixa, na ordem em que foram dados na entrada (que aparece em primeiro lugar). Se este primeiro número pode aparecer em duas operações diferentes de mesma precedência, o mesmo critério deve ser aplicado para o segundo operando. Novos números gerados pelas operações são assumidos para serem então, colocados no início da lista ordenada.","id":"1395","category":"Paradigmas","statistics":{"level":"9 / 10","submissions":91,"solved":15,"ratio":"16.48%"}}