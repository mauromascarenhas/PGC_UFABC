{"output":"Primeiro, imprima o inteiro N (8 ≤ N ≤ 512) em uma única linha. Então, imprima uma string de letras B, W e Q que corretamente codificam a figura com o esquema quadtree. Finalmente, acabe a string com um caractere de nova linha.","input":"A primeira linha será \u201c#define quadtree_width N\u201d, onde N é o tamanho da figura em pixels. (A figura é quadrática, contendo N*N pixels).\n                    \tA segunda linha será \u201cdefine quadtree_height N\u201d, concordando com a primeira.\n                    \tA terceira linha será \u201c#define quadtree_bits[ ] = {\u201c.\n                    \tEntão seguirão N linhas, cada uma codificando uma linha de pixels na figura. Haverão N/8 números hexadecimais por linha.\n                    \tCada número hexadecimal é composto por 8 bits que codificam 8 pixels da esquerda para a direita (onde o bit da extrema esquerda tem valor 1 e o bit da extrema direita tem valor 128). Os números hexadecimais são impressos no formato 0xdd, onde d é um dos caracteres do conjunto { 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f }.\n                    \tExemplo: Os 8 pixels WBBBWWB são escritos como 0x9e. (2 + 4 + 8 + 16 + 128 = 158 = 0x9e)\n                    \tA última linha será \u201c};\u201d.\n                    \n\n                    Nota: Os comentários no exemplo de entrada (delimitados por /* e */) não são parte da entrada. Eles devem ajudar a explicar o formato XBM.","level":9,"name":"Quadtree II","has_images":false,"description":"Quando percebeu que o mapa do tesouro codificado em quadtree era uma falsificação, Florida Jones fez um plano maligno para pregar uma peça no próximo caçador de tesouros que viesse atrás do tesouro. Mas para isso, ele precisa da sua ajuda novamente.\n\n                    Você pode escrever um programa que use uma figura no formato XBM e codifica-la no esquema quadtree?","id":"1725","category":"Estruturas e Bibliotecas","statistics":{"level":"9 / 10","submissions":39,"solved":17,"ratio":"43.59%"}}