{"output":"For each test case your program must print a single line, containing a single character. If it is possible to find a concatenation of one or more words of the first set that is equal to a concatenation of one or more words of the second set then the character must be S, otherwise the character must be N.","input":"The input contains several test cases. The first line of a test case contains two integers, N1 (1 ≤ N1), and N2 (N2 ≤ 20), which indicate respectively the number of words in the first and the number of words in the second sets. Each of the following N1 lines contains a word of the first set. Each of the following N2 lines contains a word of the second set.\n\t\n\tNote: Each word has at least one and at most 40 characters, all zeros and ones.","level":6,"name":"Words","has_images":false,"description":"Given two sets of words formed by zeros and ones, you must write a program to determine if there are concatenations of \n\twords of each of the sets that generate the same word. For example, if a set A contains the words 010 and 11 and another \n\tset B contains the words 0 and 101, then the word 01011010 can be formed both by concatenating words of A and by \n\tconcatenating words of B.\n\n\t010 · 11 · 010 = 01011010 = 0 · 101 · 101 · 0 Input","id":"1231","category":"Paradigms","statistics":{"level":"6 / 10","submissions":260,"solved":124,"ratio":"47.69%"}}