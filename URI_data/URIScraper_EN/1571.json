{"output":"For each line of input produce one line of output. Each line will contain seven floating point numbers t1, t2, t3, t4, t5, t6 and t7. Here t1, t2, t3, t4, t5, t6 and t7 denote the length of the side of a triangle for the given input in case 1, 2, 3, 4, 5, 6, and 7 respectively. All floating point numbers should have ten digits after the decimal point. The output will be checked with special correction program. So small precision errors will be ignored.","input":"The input file contains several lines of input. Each line contains a single floating point number S (0<=S<=10000) which denotes the side of a square. Input is terminated by end of file.","level":6,"name":"A Square & Equilateral Triangles","has_images":true,"description":"The figure 1, 2, 3, 4, 5, 6 and 7 shows how 1, 2, 3, 4, 5, 6 and 8 triangles of equal size can be put int a square optimally. Obviously, if the square size remains same the triangle sizes will be decreasing from figure 1 to 7. Given the square size you will have to find out the sides of the triangles for all seven figures. You can assume that when the images look exactly symmetric along a certain axis they are actually symmetric along that certain axis. Also note that I am asking you to print the decimal value of the exact solution and not any approximate solution.\n\nÂ ","id":"1571","category":"Computational Geometry","statistics":{"level":"6 / 10","submissions":213,"solved":154,"ratio":"72.30%"}}