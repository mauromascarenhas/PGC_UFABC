{"output":"Each line of the input excepting the lines with the \"I\" or the \"R\" commands must produce one output line. \n\t\t\t\t\tThe output must be acording to the given example, remembering that \"existe\" means exist and \"nao existe\" means don't exist \n\t\t\t\t\tin portuguese. There is no blank space after the last line char, otherwise you`ll get \n\t\t\t\t\tPresentation Error.","input":"The input contains N lines and each line contains an operation using integer numbers (1-106) over a binary search tree, \n\t\tthat initially will be empty. The first line of input contains an insertion (I). The next lines can have any command described above, like \n\t\tthe given example. The end of input is determined by EOF.","level":7,"name":"BST Operations II","has_images":false,"description":"Marcela are still working in the last program and the teacher asked her to write a new computer program about binary search tree. \n\tThis new program is similar with the previous one, but it works with integer numbers and must have a new command \"R\". See the commands:\n\n\t\n\t\tI n: Insert the n element in the current Binary Search Tree.\n\t\n\t\tPREFIXA: print the pre-order traversal for the current tree\n\t\n\t\tINFIXA: print the in-order traversal for the current tree\n\t\n\t\tPOSFIXA: print the post-order traversal for the current tree\n\t\n\t\tP n: Search the n element, printing a message indicanding if n exist.\n\t\n\t\tR n: Remove n element, if n exist.\n\t\n\tBy using this program, at any time must be possible to insert a new element, print the Pre-order, \n\tIn-order or Post-order traversal, search any element inside the tree or even remove any element. \n\t\n\tNote: If an element with two subtrees (left and right) is removed, the antecessor (the bigger element from left subtree, must occupy its place and in case of attempt of remove an element inexistent none message must be printed.","id":"1201","category":"Graph","statistics":{"level":"7 / 10","submissions":4304,"solved":855,"ratio":"19.87%"}}