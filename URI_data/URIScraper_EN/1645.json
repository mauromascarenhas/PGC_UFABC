{"output":"For each test case, print one line with the number of increasing subsequences of length k that the input sequence contains. You may assume that the inputs are chosen in such a way that this number fits into a 64 bit signed integer (in C/C++, you may use the data type \"long long\", in Java the data type \"long\").","input":"The input contains several test cases. The first line of each test case contains two numbers n and k (1 ≤ k ≤ n  ≤ 100), where n is the length of the sequence drawn by the machine, and k is the desired length of the increasing subsequences. The following line contains n pairwise distinct integers ai(-10000 ≤ ai ≤ 10000), where ai is the ith number in the sequence drawn by the machine.\n\n                    The last test case is followed by a line containing two zeros.","level":7,"name":"El Dorado","has_images":false,"description":"Bruce Force has gone to Las Vegas, the El Dorado for gamblers. He is interested especially in one betting game, where a machine forms a sequence of n numbers by drawing random numbers. Each player should estimate beforehand, how many increasing subsequences of length k will exist in the sequence of numbers.\n\n                    A subsequence of a sequence a1, ..., an is defined as ai1, ..., ail, where 1 ≤ i1 < i2 < ... < il ≤ n. The subsequence is increasing, if aij-1 < aij for all 1 < j ≤ l.\n\n                    Bruce doesn't trust the Casino to count the number of increasing subsequences of length k correctly. He has asked you if you can solve this problem for him.","id":"1645","category":"Paradigms","statistics":{"level":"7 / 10","submissions":969,"solved":365,"ratio":"37.67%"}}