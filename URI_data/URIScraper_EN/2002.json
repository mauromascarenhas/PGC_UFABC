{"output":"For each test case, print the lowest cost of moving Rogerio to Rogerio's House.","input":"The input consists of several test cases. The first line of each test case contains two integers N (1≤ N ≤ 100) and M (1 ≤ M ≤ 100), representing the board size.\n Then, N lines, each with N integers, representing the values of board cells (the value of each cell may vary from 1 to 1000000000000). The input ends with the final file (EOF). It's guaranteed that the answer can be represented by a 64-bit signed integer.","level":9,"name":"Rogerio's House","has_images":true,"description":"Rogerio is a very smart and mischievous boy. He likes to use his spare time to create board games. The last game created by Rogério was the \"Rogerio's House\".\n\n\nIn this game, the board has size NxM. Each cell of the board has an integer value. Rogerio (game character) begins in the upper left cell and the Rogerio's house in the lower right cell. The goal is to move Rogério to the house with the lowest possible cost.\n\nEach round, you can move Rogerio to one of the adjacent cells (not allowed Rogerio move in diagonals). The cost to move Rogerio a cell with value X for a cell with value Y is defined by the function C(X, Y).\n\n\n\n\n\tC(X, Y) = min(X,Y) XOR (min(X,Y)+1) XOR ... XOR max(X,Y).\n\n\n\nNote that if X equals Y, C(X, Y) = X. XOR is a binary operation known as \"exclusive or\".\n\nTo facilitate the understanding of the function C(X, Y), your code in C ++ is presented below:","id":"2002","category":"Graph","statistics":{"level":"9 / 10","submissions":287,"solved":77,"ratio":"26.83%"}}