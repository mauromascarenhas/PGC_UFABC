{"output":"For each test case, an output must be printed that represents a depth search for all nodes, with respect of the hierarquie of each of them. The character b means a blank space. See the follewing example:\n\tbb0-2 pathR(G,2)\n\tbbbb2-1 pathR(G,1)\n\tbbbb2-4 pathR(G,4)\n\tbbbbbb4-1\n\t\n\tAnd so on...\n\tObs.: The program should print a blank line after each test case, even after the last test case.","input":"The input file contains many test cases. The first line of the input file contains an integer N  that represents the quantity of test cases that follows. Each one of N test cases contains, in the first line, two informations:  (1 ≤ V ≤ 20) and E (1 ≤ E ≤ 20), that are respectively the amount of vertices and edges of the graph. Follow E lines containing informations over all of the edges of this graph.","level":5,"name":"DFSr - Depth Hierarchy","has_images":true,"description":"In graphs, the PathR function is well-known. It's called dfs or dfsr. It means a recursive deph-searching in nodes of a graph, using backtracking. The task here is, from an input graph, generate the hierarquie design of the searched nodes. To help you, is given the PathR procedure, listed above.","id":"1081","category":"Graph","statistics":{"level":"5 / 10","submissions":5572,"solved":1790,"ratio":"32.12%"}}