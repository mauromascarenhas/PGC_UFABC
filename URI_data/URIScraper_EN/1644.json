{"output":"For each test case, print one line with the decoded string.","input":"The input contains several test cases. Each test case starts with a line containing two numbers N and M (1 ≤ N ≤ 80, 1 ≤ M ≤ 109). The following line consists of N pairwise different numbers p1,...,pn (1 ≤ pi ≤ N). The third line of each test case consists of exactly N characters, and represent the encoded string. The last test case is followed by a line containing two zeros.","level":8,"name":"Decode the Strings","has_images":false,"description":"Bruce Force has had an interesting idea how to encode strings. The following is the description of how the encoding is done:\n\n                    Let x1,x2,...,xn be the sequence of characters of the string to be encoded.\n\n                    \n                    \tChoose an integer M and N pairwise distinct numbers p1,p2,...,pn from the set {1, 2, ..., N} (a permutation of the numbers 1 to N).\n                    \tRepeat the following step m times.\n                    \tFor 1 ≤ i ≤ N set yi to xpi, and then for 1 ≤ i ≤ N replace xi by yi.\n                    \n\n                    For example, when we want to encode the string \"hello\", and we choose the value M = 3 and the permutation 2, 3, 1, 5, 4, the data would be encoded in 3 steps: \"hello\" -> \"elhol\" -> \"lhelo\" -> \"helol\".\n\n                    Bruce gives you the encoded strings, and the numbers M and p1, ..., pn used to encode these strings. He claims that because he used huge numbers m for encoding, you will need a lot of time to decode the strings. Can you disprove this claim by quickly decoding the strings?","id":"1644","category":"Mathematics","statistics":{"level":"8 / 10","submissions":301,"solved":65,"ratio":"21.59%"}}