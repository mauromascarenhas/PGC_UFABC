{"output":"For each test case in the input, your program must print one single line, containing the size of the largest sub-matrix that, when linearized, results in an increasing sequence.","input":"The input contains several test cases. The first line of a test case contains two integers N and M indicating the matrix dimensions (1 ≤ N, M ≤ 600). Each one of the next N lines contains M integers, separated by a space, describing the elements of the matrix. Element Xi,j of the matrix is the j-th integer of the i-th line in the input (-106 ≤ Xi,j ≤ 106).\n\n\tThe end of input is indicated by a line containing only two zeros, separated by a space.","level":10,"name":"Longest Increasing Sub-sequence","has_images":true,"description":"The problem of determining the longest increasing sub-sequence in a list of numbers is already a classic in programming competitions. Despite this fact, that is the problem you must solve here. But, in order to avoid having you yawning while solving the problem, we introduced a small change: the list of numbers will be given as a bidimensional matrix, and the increasing sequence must be \"embedded\" in a submatrix of the original matrix.\n\n\tLet's define the problem more precisely. The linearization of a bidimensional matrix is the concatenation of its lines, from the first to the last. A submatrix is a rectangular region of a bidimensional matrix (with sides paralel to the sides of the matrix). The size of a submatrix is its number of elements. You must write a program that, given a matrix of integers, determines the largest submatrix such that, when linearized, results in an increasing sequence. The figure below shows some examples of submatrices of largest size which contain increasing sequences. Notice that more than one such a submatrix may exist in a given matrix.","id":"1092","category":"Ad-Hoc","statistics":{"level":"10 / 10","submissions":709,"solved":168,"ratio":"23.70%"}}