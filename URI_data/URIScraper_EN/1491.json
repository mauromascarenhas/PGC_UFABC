{"output":"For each test case print N lines, each of them containing an integer. In the i-th line write the maximum number of case mismatches of the occurrences of T in the i-th substring selection, considering all the case ﬂips made by previous selections; if no such occurrence exists write the value −1.","input":"The input contains many test cases and ends with EOF. The ﬁrst line of a test case contains an integer N (1 ≤ N ≤ 105 ) and a non-empty string T of at most 5 letters, representing respectively the number of substring selections and the string to search for. The second line contains a non-empty string P of at most 105 letters, indicating the original text of the blog post. Positions of the post are numbered with consecutive integers from left to right, being 1 the leftmost position and |P| the rightmost position. Each of the next N lines describes a substring selection with two integers L and R (1 ≤ L ≤ R ≤ |P|) indicating that the substring starts at position L and ends at position R, inclusive.","level":10,"name":"Blogger Language","has_images":false,"description":"Benjamin\u2019s granddaughter Brenda has a blog where she posts articles about school, friends and other life issues. Intrigued by her opinions, Benjamin tried to read it, but very soon he realized it was too hard to read because of Brenda\u2019s writing quirks.\n\nBrenda writes without spaces or punctuation marks, and moreover, she uses lower and uppercase letters in a liberal and strange way. For example, one of her posts is \u201cPrOgRAMmINgiSgrEAt\u201d. Benjamin has trouble noticing the words \u201cprogramming\u201d, \u201cis\u201d and \u201cgreat\u201d when they are written in this way.\n\nTo improve his understanding Benjamin decided to do the following: he will first choose a particular string T and a blog post he is interested in; then he will select a contiguous substring of the post and search for T within the substring, in a case-insensitive way; for each occurrence of T within the substring, he will calculate the number of case mismatches, and finally he will obtain the maximum among all these values. For example, if Benjamin chooses \u201cGR\u201d as T and then selects the substring \u201cPrOgRAM\u201d, he would find a single occurrence \u201cgR\u201d for which the number of case mismatches is 1. For the same substring, if \u201cr\u201d was chosen as T, he would have found two occurrences, \u201cr\u201d with 0 mismatches and \u201cR\u201d with 1 mismatch, so the maximum number of mismatches would be 1.\n\nTo complicate things further, Brenda included in the blog a script that, after operating with a substring selection, flips the case of all the selected letters. This means that after selecting \u201cPrOgRAM\u201d and proceeding as explained above, the sample post would read \u201cpRoGrammINgiSgrEAt\u201d. If Ben- jamin selects \u201cammINgi\u201d as a second substring, after calculating his result the post would be left as \u201cpRoGrAMMinGISgrEAt\u201d, accumulating both flips.\n\nYou will be given the string T and the original text of the blog post chosen by Benjamin. You will also be given a list of substring selections Benjamin made, in the order he made them. You need to calculate, for each selection, the maximum number of case mismatches of the occurrences of T in the selected part, considering all the case flips made by previous selections. Notice that the flipping of the case occurs after calculating the result for each selection.","id":"1491","category":"Strings","statistics":{"level":"10 / 10","submissions":178,"solved":44,"ratio":"24.72%"}}