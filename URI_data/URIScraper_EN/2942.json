{"output":"The output consists of a single line containing the minimum number of operations to transform array A into array B or the message \"IMPOSSIBLE\" if it is not possible to do so.","input":"The first line of the input consists of an integer N (1 ≤ N ≤ 105) representing the size of the array. The second line of the input has N integers Ai (0 ≤ Ai < 231) representing the initial array configuration. The third line of the input has N integers Bi (0 ≤ Bi < 231) representing the final configuration of the array.","level":5,"name":"Bits Mixing","has_images":true,"description":"Bit mixing is an operation performed on a position of an array of integers.  When applied to position \\(i\\) of an array \\(A\\), it mixes the bits of the number in position \\(i\\) with those of the adjacent positions of the array. In more exact terms: \n\n\t\t\t\t\\(A[i] \\leftarrow A[i-1] \\bigoplus A[i] \\bigoplus A[i+1]\\)\n\t\t\t\t\n\t\t\t\t(read: \\(A[i]\\) receive the xor of \\(A[i-1]\\) with \\(A[i]\\) with \\(A[i+1]\\))\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tThe operator \\(\\bigoplus\\) symbolizes the-xor bitwise  operation.\n\n\t\t\t\tBy definition, the operation can only be applied on positions having both adjacent positions.\n\n\t\t\t\tYour task is, given two configurations of an array, to calculate the minimum number of bits mixing to transform the first array into the second.","id":"2942","category":"Ad-Hoc","statistics":{"level":"5 / 10","submissions":151,"solved":13,"ratio":"8.61%"}}