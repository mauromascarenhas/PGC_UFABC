{"output":"For each test case, print the amount of satiated mice.","input":"The input consists of several test cases. The first line of each test case contains two integers N (1 ≤ N ≤ 1000) and M (1 ≤ M ≤ 1000),\nrepresenting the amount of rats and the amount of food.\nThe second line of each test case contains N integers representing hunger levels of mice (1 ≤ hi ≤ 1000).\nThe third line of each test case contains M integers, representing food support levels (1 ≤ si ≤ 1000). The input ends with the final file (EOF).","level":9,"name":"Upset Fracil","has_images":false,"description":"Fracil have a breeding N mice and has M foods to feed them.\nEach mouse has a level of hunger.\nEach food has a level of support.\nWhen a rat with level of hunger h is fed with food with higher support level than or equal to h, the mouse is satiated and your hunger level is reset to zero.\nWhen a rat with level of hunger h is fed with food with lower support level than h, the new hunger level is h-s.\n\nTo feed your rats, Fracil follow a strategy:\n\n\n\tThe food will be provided to the rats in sequence, first comes the food with index 1, then the index 2 and so on.\n\tFracil prefers feed the mice that have the highest level of hunger and can be satiated with the food.\n\tIf you have neither a mouse that can be satiated, Fracil prefers to feed the mice with higher levels of hunger.\n\tEach food can only be provided once and without division (can not supply parts from one food to different mice).\n\n\n \n\nFracil want to know how much mice will be satisfied when they finish the food.","id":"2005","category":"Ad-Hoc","statistics":{"level":"9 / 10","submissions":739,"solved":136,"ratio":"18.40%"}}