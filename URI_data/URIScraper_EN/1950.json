{"output":"Print a line consisting of a single value representing the probability of the robot having got to exit the maze in at most T2 time units counting from the beginning of the experiment. The probability must be shown as a percentage with two decimal places after the decimal point.","input":"The first input line consists of four integers, N, M, T1 and T2 (1 ≤ N, M ≤ 30, 1 ≤ T1 < T2 ≤ 105), which represent respectively the number of lines and the number of columns of the grid and the times set in the system as previously explained. The N lines following describe the initial configuration of the maze and contain exact M characters each, wherein the jth (1 ≤ j ≤ M) character of the ith (1 ≤ i ≤ N) line is ., # or R if the position (i, j) of the grid had begun, respectively, free, blocked or containing the robot. The next input line consists of a single integer K (0 ≤ K ≤ N × M), which represents the number of free positions which were blocked T1 time units after the beginning of the experiment, and the last K input lines describe those positions, each one consisting of two integers i and j (1 ≤ i ≤ N, 1 ≤ j ≤ M) in order to designate the position (i, j).","level":4,"name":"Spöhndriger","has_images":false,"description":"\u2014 Wreck-it, Marco!\n\n\t\t\t\t\tThese words have got engraved forever in Dr. Marco Spohn's heart, and that is why he does everything with excellence and devotion. Lately he has been working on an operating system which controls a robot and a maze and is capable of making the robot find the maze exit. For the meanwhile, the project is at its first steps, and in the current version the robot just moves randomly in the maze.\n\n\t\t\t\t\tThe maze is an electronic box whose positions form an N × M grid. Each position of the grid can be either blocked, when a rubber wall stands at the position from the bottom to the top of the box, or free. Assuming 1-based indexing, the exit of the maze lies always at the position (N, M) and is never blocked, being the only position not covered by the box cover. Dr. Spohn's robot is smart and, due to its cameras and sensors, it can know which positions are free or blocked among the adjacent positions in which it is. Thus, the next position to which it goes is always taken with uniform distribution among all the free adjacent positions. The adjacencies are always considered only in horizontal and vertical directions. If there are free adjacent positions, the move from the current position to the next costs a constant time unit. Otherwise, the robot stands still.\n\n\t\t\t\t\tYesterday Dr. Spohn did an interesting experiment. First, he set up the maze leaving some positions free and the others blocked. Then, he put the robot at some free position of the maze, covered the box, programmed two times T1 and T2 (T1 < T2) and started the system. Once the system is started, the robot, out of Dr. Spohn's sight, began to move inside the maze as described above, until not being able to move anymore, until reaching the position (N, M), or until the time T2 had been exceeded and the experiment had been aborted. After T1 time units from the start, the system drawed K free positions at which the robot was not and blocked them, reporting in a screen to Dr. Spohn which positions were blocked.\n\n\t\t\t\t\tGiven the times T1 and T2, the initial configuration of the maze and the K free positions which were blocked after T1 time units, calculate the probability of the robot having got to exit the maze in at most T2 time units counting from the beginning of the experiment.","id":"1950","category":"Graph","statistics":{"level":"undefined","submissions":-1,"solved":-1,"ratio":"undefined"}}